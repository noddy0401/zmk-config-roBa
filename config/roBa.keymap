#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                      &kp T                                      &kp Y      &kp U  &kp I            &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                      &kp G        &mkp MCLK      &trans         &kp H      &kp J  &kp K            &kp L    &mt RIGHT_SHIFT COLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                      &kp B        &trans         &trans         &kp N      &kp M  &mt RCTRL COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_WIN  &lt 2 LANG_ZENKAKUHANKAKU  &lt 3 SPACE  &mkp MB1       &kp BACKSPACE  &kp ENTER                                   &kp PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE      &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&kp TAB         &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL       &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp TAB         &kp NUMBER_1  &trans  &trans  &trans                          &trans  &kp F7                &kp UP_ARROW           &kp F8     &kp MINUS
&kp SLASH       &trans        &trans  &trans  &trans  &trans      &trans      &trans  &kp LEFT              &kp DOWN_ARROW         &kp RIGHT  &kp SEMICOLON
&kp LEFT_SHIFT  &trans        &trans  &trans  &trans  &trans      &trans      &kp AT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans     &trans
&kp LCTRL       &trans        &trans  &trans  &trans  &trans      &kp DELETE  &trans                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &trans    &trans    &trans    &trans                          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS  &trans
&kp TAB     &mkp MB5  &mkp MB4  &mkp MB2  &trans  &trans      &trans      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS   &trans
&trans      &trans    &trans    &trans    &trans  &trans      &trans      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SLASH  &trans
&trans      &trans    &trans    &trans    &trans  &trans      &kp PERIOD  &kp NUMBER_0                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp Q   &kp W         &kp E         &kp R                      &kp T                                      &kp Y      &kp U  &kp I            &kp O       &kp P
&kp A   &kp S         &kp D         &kp F                      &kp G        &trans         &trans         &kp H      &kp J  &kp K            &kp L       &mt RSHFT COLON
&trans  &kp X         &kp C         &kp V                      &kp B        &trans         &trans         &kp N      &kp M  &mt RCTRL COMMA  &kp PERIOD  &mt RSHFT SLASH
&trans  &kp LEFT_ALT  &kp LEFT_WIN  &lt 2 LANG_ZENKAKUHANKAKU  &lt 3 SPACE  &mkp LCLK      &kp BACKSPACE  &kp ENTER                                      &kp PRINTSCREEN
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE      &trans  &trans  &trans  &trans                          &trans  &trans  &trans  &trans  &trans
&kp TAB         &trans  &trans  &trans  &trans  &trans      &trans      &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans      &trans      &trans  &trans  &trans  &trans  &trans
&kp LCTRL       &trans  &trans  &trans  &trans  &trans      &kp DELETE  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
